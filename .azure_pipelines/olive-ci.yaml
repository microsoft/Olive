trigger:
  branches:
    include:
    - main
  paths:
    exclude:
    - docs/*
    - examples/README.md
    - examples/**/README.md
    - README.md
    - CONTRIBUTING.md
    - LICENSE
    - .github/*
    # commonly updated examples with no test
    - examples/directml/llm/*
    - examples/directml/stable_diffusion_xl/*
    - examples/llama2/*
    - examples/mistral/*
    - examples/open_llama/*
    - examples/phi2/*
    - examples/phi3/*
pr:
  branches:
    include:
    - main
  paths:
    exclude:
    - docs/*
    - examples/README.md
    - examples/**/README.md
    - README.md
    - CONTRIBUTING.md
    - LICENSE
    # unrelated pipelines
    - .github/*
    - .azure_pipelines/performance_check/*
    - .azure_pipelines/performance.yaml
    - .azure_pipelines/job_templates/olive-performance-template.yaml
    # commonly updated examples with no test
    - examples/directml/llm/*
    - examples/directml/stable_diffusion_xl/*
    - examples/llama2/*
    - examples/mistral/*
    - examples/open_llama/*
    - examples/phi2/*
    - examples/phi3/*

variables:
  runCodesignValidationInjection: false
  skipComponentGovernanceDetection: true

jobs:
# Linux unit tests
- template: job_templates/olive-test-template.yaml
  parameters:
    name: Linux_CPU_CI_Unit_Test
    pool: $(OLIVE_POOL_UBUNTU2004)
    test_type: 'unit_test'

- template: job_templates/olive-test-template.yaml
  parameters:
    name: Linux_GPU_CI_Unit_Test
    pool: $(OLIVE_POOL_UBUNTU2004_GPU_V100)
    test_type: 'unit_test'
    device: 'gpu'
    onnxruntime: onnxruntime-gpu
    requirements_file: 'requirements-test-gpu.txt'

# Windows unit tests
- template: job_templates/olive-test-template.yaml
  parameters:
    name: Windows_CPU_CI_Unit_Test
    pool: $(OLIVE_POOL_WIN2019)
    test_type: 'unit_test'
    windows: True

# Linux examples test
- template: job_templates/olive-example-template.yaml
  parameters:
    name: Linux_CI
    pool: $(OLIVE_POOL_UBUNTU2004)
    onnxruntime: onnxruntime
    examples:
      bert_ptq_cpu:
        exampleFolder: bert
        exampleName: bert_ptq_cpu
      resnet_ptq_cpu:
        exampleFolder: resnet
        exampleName: resnet_ptq_cpu
      whisper:
        exampleFolder: whisper
        exampleName: whisper
      mobilenet_qnn_ep:
        exampleFolder: mobilenet
        exampleName: mobilenet_qnn_ep

# Windows examples test
- template: job_templates/olive-example-template.yaml
  parameters:
    name: Windows_CI
    pool: $(OLIVE_POOL_WIN2019)
    onnxruntime: onnxruntime
    examples:
      bert_ptq_cpu:
        exampleFolder: bert
        exampleName: bert_ptq_cpu
      resnet_ptq_cpu:
        exampleFolder: resnet
        exampleName: resnet_ptq_cpu
      whisper:
        exampleFolder: whisper
        exampleName: whisper
      mobilenet_qnn_ep:
        exampleFolder: mobilenet
        exampleName: mobilenet_qnn_ep

# Linux GPU examples testing.
- template: job_templates/olive-example-template.yaml
  parameters:
    name: Linux_GPU_CI
    pool: $(OLIVE_POOL_UBUNTU2004_GPU_V100)
    onnxruntime: onnxruntime-gpu
    examples:
      bert_cuda_gpu:
        exampleFolder: bert
        exampleName: bert_cuda_gpu
      stable_diffusion_cuda_gpu:
        exampleFolder: stable_diffusion
        exampleName: stable_diffusion_cuda_gpu
        exampleRequirements: requirements-common.txt
      llama2:
        exampleFolder: llama2
        exampleName: llama2
        exampleRequirements: requirements-pipeline.txt

# these jobs need secrets not available in forks
- ${{ if ne(variables['System.PullRequest.IsFork'], 'True') }}:
  # integration tests
  - template: job_templates/olive-test-template.yaml
    parameters:
      name: Linux_CPU_CI_Integration_Test
      pool: $(OLIVE_POOL_UBUNTU2004)
      test_type: 'integ_test'

  - template: job_templates/olive-test-template.yaml
    parameters:
      name: Windows_CPU_CI_Integration_Test
      pool: $(OLIVE_POOL_WIN2019)
      test_type: 'integ_test'
      windows: True

  # Multiple EP Linux testing
  - template: job_templates/olive-test-template.yaml
    parameters:
      name: Linux_CI_Multiple_EP_Test
      pool: $(OLIVE_POOL_UBUNTU2004)
      test_type: 'multiple_ep'

# build documents
- template: job_templates/olive-build-doc-template.yaml
  parameters:
    job_name: Test_BuildDocs
    display_name: Test Build Docs
    pool: $(OLIVE_POOL_UBUNTU2004)
    publish_docs: false
