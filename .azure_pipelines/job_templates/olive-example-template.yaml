# Olive Build and Test Pipeline template for examples on Azure DevOps

parameters:
  name: ''
  pool: ''
  python_version: '3.8'
  onnxruntime: 'onnxruntime'

jobs:
  - job: ${{parameters.name}}_Test_Examples
    timeoutInMinutes: 300
    pool:
      name: ${{ parameters.pool}}
    strategy:
      matrix:
        ${{ insert }}: ${{ parameters.examples }}
    variables:
      runCodesignValidationInjection: false

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: ${{ parameters.python_version }}
      displayName: Use Python ${{ parameters.python_version }}

    - script: python -m pip install .
      displayName: Install Olive

    - ${{ if startsWith(parameters.onnxruntime, 'ort-nightly') }}:
      - script: |
          pip install onnxruntime
          pip uninstall -y onnxruntime
          pip install ${{ parameters.onnxruntime }} --index-url https://aiinfra.pkgs.visualstudio.com/PublicPackages/_packaging/ORT-Nightly/pypi/simple/
        displayName: Install ${{ parameters.onnxruntime }}
    - ${{ else }}:
      - script: |
          pip install ${{ parameters.onnxruntime }}
        displayName: Install ${{ parameters.onnxruntime }}

    # set exampleRequirements to requirements.txt if user does not specify
    - script:
        echo "##vso[task.setvariable variable=exampleRequirements]requirements.txt"
      displayName: Set exampleRequirements
      condition: eq(variables['exampleRequirements'], '')

    - script: |
          python -m pip install pytest
          python -m pip install azure-identity azure-storage-blob tabulate
          python -m pip install -r $(Build.SourcesDirectory)/examples/$(exampleFolder)/$(exampleRequirements)
          python -m pytest -v -s --log-cli-level=WARNING --junitxml=$(Build.SourcesDirectory)/logs/test_examples-TestOlive.xml $(Build.SourcesDirectory)/examples/test/test_$(exampleName).py
      displayName: Test Examples
      env:
        WORKSPACE_SUBSCRIPTION_ID: $(workspace-subscription-id)
        WORKSPACE_RESOURCE_GROUP: $(workspace-resource-group)
        WORKSPACE_NAME: $(workspace-name)
        MANAGED_IDENTITY_CLIENT_ID: $(olive-1es-identity-client-id)

    - task: ComponentGovernanceComponentDetection@0
      inputs:
        scanType: 'Register'
        verbosity: 'Verbose'
        alertWarningLevel: 'High'
      displayName: Component Detection

    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testResultsFiles: '**/*TestOlive*.xml'
        testRunTitle: '$(Build.BuildNumber)[$(Agent.JobName)]'
        failTaskOnFailedTests: true
      displayName: Upload pipeline run test results

    - script: git clean -dfX
      condition: always()
      displayName: Clean remaining artifacts
