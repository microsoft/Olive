{
    "input_model": {
        "type": "HfModel",
        "model_path": "microsoft/Phi-3-mini-4k-instruct",
        "load_kwargs": { "trust_remote_code": true }
    },
    "systems": {
        "local_system": {
            "type": "LocalSystem",
            "accelerators": [ { "device": "CPU", "execution_providers": [ "CPUExecutionProvider" ] } ]
        }
    },
    "data_configs": [
        {
            "name": "tiny_codes_train",
            "type": "HuggingfaceContainer",
            "load_dataset_config": {
                "data_name": "nampdn-ai/tiny-codes",
                "split": "train[:70%]",
                "col_filters": { "programming_language": "Python" }
            },
            "pre_process_data_config": { "text_template": "### Question: {prompt} \n### Answer: {response}" }
        },
        {
            "name": "tiny_codes_eval",
            "type": "HuggingfaceContainer",
            "load_dataset_config": {
                "data_name": "nampdn-ai/tiny-codes",
                "split": "train[-128:]",
                "col_filters": { "programming_language": "Python" }
            },
            "pre_process_data_config": { "text_template": "### Question: {prompt} \n### Answer: {response}" }
        },
        {
            "name": "wikitext2_train",
            "type": "HuggingfaceContainer",
            "load_dataset_config": { "data_name": "wikitext", "subset": "wikitext-2-raw-v1", "split": "train" },
            "pre_process_data_config": { "add_special_tokens": false, "max_samples": 128 }
        },
        {
            "name": "gqa_transformer_prompt_dummy_data",
            "type": "TransformersPromptDummyDataContainer",
            "load_dataset_config": { "use_fp16": true, "shared_kv": true, "trust_remote_code": true }
        }
    ],
    "evaluators": {
        "common_evaluator": {
            "metrics": [
                {
                    "name": "latency",
                    "type": "latency",
                    "sub_types": [
                        { "name": "avg", "priority": 1, "goal": { "type": "percent-min-improvement", "value": 20 } },
                        { "name": "max" },
                        { "name": "min" }
                    ],
                    "data_config": "gqa_transformer_prompt_dummy_data",
                    "user_config": { "io_bind": true }
                }
            ]
        }
    },
    "passes": {
        "lora": {
            "type": "LoRA",
            "train_data_config": "tiny_codes_train",
            "eval_data_config": "tiny_codes_eval",
            "r": 64,
            "training_args": {
                "per_device_train_batch_size": 1,
                "per_device_eval_batch_size": 1,
                "gradient_accumulation_steps": 4,
                "gradient_checkpointing": false,
                "max_steps": 150,
                "logging_steps": 50,
                "max_grad_norm": 0.3
            }
        },
        "qlora": {
            "type": "QLoRA",
            "train_data_config": "tiny_codes_train",
            "eval_data_config": "tiny_codes_eval",
            "r": 64,
            "training_args": {
                "per_device_train_batch_size": 1,
                "per_device_eval_batch_size": 1,
                "gradient_accumulation_steps": 4,
                "gradient_checkpointing": false,
                "max_steps": 150,
                "logging_steps": 50,
                "group_by_length": true,
                "max_grad_norm": 0.3
            }
        },
        "merge_adapter_weights": { "type": "MergeAdapterWeights" },
        "awq": { "type": "AutoAWQQuantizer" },
        "builder": { "type": "ModelBuilder", "precision": "<place_holder>" },
        "fp32_logits": { "type": "OnnxIODataTypeConverter" },
        "tune_session_params": {
            "type": "OrtSessionParamsTuning",
            "data_config": "gqa_transformer_prompt_dummy_data",
            "io_bind": true,
            "execution_providers_list": [ "CUDAExecutionProvider" ],
            "opt_level_list": [ 0, 1 ],
            "execution_mode_list": [ 0, 1 ]
        }
    },
    "cache_dir": "cache",
    "output_dir": "models",
    "host": "local_system",
    "target": "local_system"
}
